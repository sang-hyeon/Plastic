# top-most EditorConfig file
root = true

# All files
[*]
indent_style = space
end_of_line = crlf
dotnet_style_qualification_for_field = true:silent
dotnet_style_qualification_for_property = true:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = false:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = false:warning
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
tab_width = 4
indent_size = 4
dotnet_style_operator_placement_when_wrapping = beginning_of_line

# Xml files
[*.xml]
indent_size = 2

# Yml files
[*.yml]
indent_size = 2

[*.cs]
#### Guide lines on Visual Studio####
guidelines = 130
guidelines_style = 1px dotted gray

#### 명명 스타일 ####

# 명명 규칙

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Appy our rule to private fields.
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.style = require_underscore_prefix_and_camel_case
dotnet_naming_rule.private_fields_must_begin_with_underscore_and_be_in_camel_case.severity = warning

# 기호 사양

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Define what we will treat as private fields.
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

# 명명 스타일

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

# Define rule that something must begin with an underscore and be in camel case.
dotnet_naming_style.require_underscore_prefix_and_camel_case.required_prefix = _
dotnet_naming_style.require_underscore_prefix_and_camel_case.capitalization = camel_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case
csharp_space_around_binary_operators = before_and_after
csharp_using_directive_placement = outside_namespace:silent
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_var_for_built_in_types = true:none
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = false:warning
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:warning
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_methods = when_on_single_line:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = unused_local_variable:silent
csharp_indent_labels = one_less_than_current

# IDE Analysis

dotnet_analyzer_diagnostic.category-Style.severity = warning

# IDE0005: Using 지시문은 필요하지 않습니다.
dotnet_diagnostic.IDE0005.severity = warning

# IDE0160: Convert to block scoped namespace
csharp_style_namespace_declarations = file_scoped

# IDE0011: Add braces
csharp_prefer_braces = false

# IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0046.severity = suggestion

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = none

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = none

[*.vb]
#### 명명 스타일 ####

# 명명 규칙

dotnet_naming_rule.interface_should_be_i로_시작.severity = suggestion
dotnet_naming_rule.interface_should_be_i로_시작.symbols = interface
dotnet_naming_rule.interface_should_be_i로_시작.style = i로_시작

dotnet_naming_rule.형식_should_be_파스칼식_대_소문자.severity = suggestion
dotnet_naming_rule.형식_should_be_파스칼식_대_소문자.symbols = 형식
dotnet_naming_rule.형식_should_be_파스칼식_대_소문자.style = 파스칼식_대_소문자

dotnet_naming_rule.필드가_아닌_멤버_should_be_파스칼식_대_소문자.severity = suggestion
dotnet_naming_rule.필드가_아닌_멤버_should_be_파스칼식_대_소문자.symbols = 필드가_아닌_멤버
dotnet_naming_rule.필드가_아닌_멤버_should_be_파스칼식_대_소문자.style = 파스칼식_대_소문자

# 기호 사양

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.형식.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.형식.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.형식.required_modifiers =

dotnet_naming_symbols.필드가_아닌_멤버.applicable_kinds = property, event, method
dotnet_naming_symbols.필드가_아닌_멤버.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected
dotnet_naming_symbols.필드가_아닌_멤버.required_modifiers =

# 명명 스타일

dotnet_naming_style.i로_시작.required_prefix = I
dotnet_naming_style.i로_시작.required_suffix =
dotnet_naming_style.i로_시작.word_separator =
dotnet_naming_style.i로_시작.capitalization = pascal_case

dotnet_naming_style.파스칼식_대_소문자.required_prefix =
dotnet_naming_style.파스칼식_대_소문자.required_suffix =
dotnet_naming_style.파스칼식_대_소문자.word_separator =
dotnet_naming_style.파스칼식_대_소문자.capitalization = pascal_case

dotnet_naming_style.파스칼식_대_소문자.required_prefix =
dotnet_naming_style.파스칼식_대_소문자.required_suffix =
dotnet_naming_style.파스칼식_대_소문자.word_separator =
dotnet_naming_style.파스칼식_대_소문자.capitalization = pascal_case
